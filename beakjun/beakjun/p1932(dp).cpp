/*
숫자삼각형 (다이나믹 프로그래밍)
시간 제한	메모리 제한	 제출	정답	맞은 사람	정답 비율
  2 초	    128 MB	     3469	2023	  1597       61.047%
문제
         7
       3   8
     8   1   0
   2   7   4   4
 4   5   2   6   5

위 그림은 크기가 5인 숫자 삼각형의 한 모습이다.

맨 위층 7부터 시작해서 아래에 있는 수 중 하나를 선택하여 아래층으로 내려올 때, 
이제까지 선택된 수의 합이 최대가 되는 경로를 구하는 프로그램을 작성하라. 
아래층에 있는 수는 현재 층에서 선택된 수의 대각선 
왼쪽 또는 대각선 오른쪽에 있는 것 중에서만 선택할 수 있다.

삼각형의 크기는 1 이상 500 이하이다. 
삼각형을 이루고 있는 각 숫자는 모두 정수이며, 범위는 0 이상 99 이하이다.

입력
첫째 줄에 삼각형의 크기 n(1≤n≤500)이 주어지고, 
둘째 줄부터 n+1줄까지 숫자 삼각형이 주어진다.

출력
첫째 줄에는 최대가 되는 합을 출력한다.
*/

#include <stdio.h>

int main() {

	int n, i, j;
	int arr[500][500] = { 0, };
	scanf("%d", &n);
	for (i = 0; i < n; i++) {
		for (j = 0; j <= i; j++) {
			scanf("%d", &arr[i][j]);
		}
	}

	for (i = 1; i < n; i++) {
		for (j = 0; j <= i; j++) {
			if (j == 0)
				arr[i][j] += arr[i - 1][j];
			else if (j == i) 
				arr[i][j] += arr[i - 1][j - 1];
			else {
				if (arr[i - 1][j] < arr[i - 1][j - 1])
					arr[i][j] += arr[i - 1][j - 1];
				else
					arr[i][j] += arr[i - 1][j];
			}
		}
	}

	int maxIdx = 0;
	for (i = 1; i < n; i++) {
		if (arr[n-1][i] > arr[n-1][maxIdx])
			maxIdx = i;
	}

	printf("%d\n", arr[n - 1][maxIdx]);
	return 0;
}