/*
프로그램 명: seat
제한시간: 1 초
어떤 극장의 좌석은 한 줄로 되어 있으며 왼쪽부터 차례대로 1 번부터 N번까지 번호가 매겨져 있다.

공연을 보러 온 사람들은 자기의 입장권에 표시되어 있는 좌석에 앉아야 한다.

예를 들어서, 입장권에 5 번이 써 있으면 5 번 좌석에 앉아야 한다. 
단, 자기의 바로 왼쪽 좌석 또는 바로 오른쪽 좌석으로는 자리를 옮길 수 있다. 
예를 들어서, 7 번 입장권을 가진 사람은 7 번 좌석은 물론이고, 6 번 좌석이나 8 번 좌석에도 앉을 수 있다. 
그러나 5 번 좌석이나 9 번 좌석에는 앉을 수 없다.

그런데 이 극장에는 “고정석 회원”들이 있다. 이 사람들은 반드시 자기 좌석에만 앉아야 하며 옆 좌석으로 자리를 옮길 수 없다.

오늘 공연은 입장권이 매진되어 1 번 좌석부터 N번 좌석까지 모든 좌석이 다 팔렸다. 
고정석 회원들의 좌석 번호들이 주어졌을 때, 사람들이 좌석에 앉는 서로 다른 방법의 가짓수를 구하는 프로그램을 작성하시오.

예를 들어서, 그림과 같이 좌석이 9 개이고, 4 번 좌석과 7 번 좌석이 고정석인 경우 가능한 경우와 가능하지 않는 경우의 몇가지 예이다.

1 2 3 4 5 6 7 8 9 좌석번호

1 2 3 4 5 6 7 8 9(o)
2 1 3 4 6 5 7 8 9(o)
3 1 2 4 5 6 7 8 9(x)
1 2 3 5 4 6 7 8 9(x)
입력

첫째 줄에는 좌석의 개수 N이 입력된다. N은 1 이상 40 이하이다.
둘째 줄에는 고정석의 개수 M이 입력된다. M은 0 이상 N 이하이다.
다음 M 개의 줄에는 고정석의 번호가 작은 수부터 큰 수의 순서로 한 줄에 하나씩 입력된다.
출력

주어진 조건을 만족하면서 사람들이 좌석에 앉을 수 있는 방법의 가짓수를 출력한다. 방법의 가짓수는 2,000,000, 000을 넘지 않는다.
*/

#include <stdio.h>

int main() {
	int n, m, i;
	int fibo[41], seat[41];
	fibo[0] = 1, fibo[1] = 1;
	for (i = 2; i < 41; i++) {
		fibo[i] = fibo[i - 1] + fibo[i - 2];
	}
	for (i = 0; i < 41; i++) {
		seat[i] = true;
	}

	

	scanf("%d", &n);
	scanf("%d", &m);
	for (i = 0; i < m; i++) {
		int temp;
		scanf("%d", &temp);
		seat[temp] = false;
	}

	int cnt = 0;
	int res = 1;
	for (i = 1; i <= n + 1; i++) {
		if (seat[i] == true)
			cnt++;
		else {
			res *= fibo[cnt];
			cnt = 0;
		}

		if (i == n) 
			res *= fibo[cnt];
	}

	printf("%d\n", res);

	return 0;
}
